version: '3.3'

x-common-variables:
  &env-vars
    ######MY SQL SERVER DETAILS####
    MYSQL_URL: jdbc:mysql://172.21.64.1:3306/bmc
    MYSQL_USER: admin
    MYSQL_PASSWORD: password
    ######KAFKA SERVER DETAILS####
    KAFKA_SERVER: 172.21.64.1:9092
    #####MONGO DB SERVER DETAILS####
    MONGODB_SERVER: 172.21.64.1
    #####S3 Details####
    S3_ACCESSKEY: 
    S3_SECRETKEY: 
    S3_BUCKET: myfirstawsbucketpratice
    #####SES Details to send verification emails.####
    SES_ACCESSKEY: 
    SES_SECRETKEY: 
    #####SMTP Details to send emails#######
    SMTP_SERVER: email-smtp.us-east-1.amazonaws.com
    SMTP_ACCESSKEY: 
    SMTP_SECRETKEY: 
    SMTP_FROMEMAIL: 
######################################################
    BMC_GATEWAY: http://bmc-gateway:9191
    MONGODB_PORT: 27017
    MONGODB_DB: bmc
    KAFKA_TOPIC: message

# Define services
services:
# Configuration for building the docker image for the each of the services
  security-service:
    build: security-service
    container_name: security-service
    image: bmc/security-service:1.0.0
    ports:
    - "8080:8080" # Forward the exposed port 8080 to port 8080 on the host machine
    networks:
      - bmcnet
    depends_on:
      - bmc-gateway
#####################################
  notification-service:
    build: notification-service
    container_name: notification-service
    image: bmc/notification-service:1.0.0
    ports:
    - "8087:8087" # Forward the exposed port 8087 to port 8087 on the host machine
    networks:
      - bmcnet
    environment:
      *env-vars
#####################################
  doctor-service:
    build: doctor-service
    container_name: doctor-service
    image: bmc/doctor-service:1.0.0
    ports:
    - "8081:8081" # Forward the exposed port 8081 to port 8081 on the host machine
    networks:
      - bmcnet
    depends_on:
      - bmc-gateway
      - security-service
      - notification-service
    environment:
      *env-vars
#####################################
  user-service:
    build: user-service
    container_name: user-service
    image: bmc/user-service:1.0.0
    ports:
    - "8083:8083" # Forward the exposed port 8083 to port 8083 on the host machine
    networks:
      - bmcnet
    depends_on:
      - bmc-gateway
      - security-service
      - notification-service
    environment:
      *env-vars
#####################################
  appointment-service:
    build: appointment-service
    container_name: appointment-service
    image: bmc/appointment-service:1.0.0
    ports:
    - "8082:8082" # Forward the exposed port 8082 to port 8082 on the host machine
    networks:
      - bmcnet
    depends_on:
      - bmc-gateway
      - security-service
      - notification-service
      - doctor-service
      - user-service
    environment:
      *env-vars
#####################################
  payment-service:
    build: payment-service
    container_name: payment-service
    image: bmc/payment-service:1.0.0
    ports:
    - "8086:8086" # Forward the exposed port 8086 to port 8086 on the host machine
    networks:
      - bmcnet
    depends_on:
      - bmc-gateway
      - security-service
      - notification-service
      - appointment-service
    environment:
      *env-vars
#####################################
  rating-service:
    build: rating-service
    container_name: rating-service
    image: bmc/rating-service:1.0.0
    ports:
    - "8084:8084" # Forward the exposed port 8084 to port 8084 on the host machine
    networks:
      - bmcnet
    depends_on:
      - bmc-gateway
      - security-service
      - notification-service
      - doctor-service
    environment:
      *env-vars
#####################################
  bmc-gateway:
    build: bmc-gateway 
    container_name: bmc-gateway
    image: bmc/bmc-gateway:1.0.0
    ports:
    - "9191:9191" # Map the exposed port 9191 on container to port 9191 on the host machine
    networks:
      - bmcnet
#####################################
# Docker Network Details
networks:
  bmcnet:
    driver: bridge
